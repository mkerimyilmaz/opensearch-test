name: Integration with Unreleased OpenSearch

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        entry:
          - { opensearch_ref: '1.x', java: 11 }
          # See please https://docs.gradle.org/8.10/userguide/upgrading_version_8.html#minimum_daemon_jvm_version
          - { opensearch_ref: '2.x', java: 11, gradle-runtime: 17 }
          - { opensearch_ref: '2.x', java: 17 }
          - { opensearch_ref: '2.x', java: 21 }
          # See please https://docs.gradle.org/8.10/userguide/upgrading_version_8.html#minimum_daemon_jvm_version
          - { opensearch_ref: 'main', java: 11, gradle-runtime: 17 }
          - { opensearch_ref: 'main', java: 17 }
          - { opensearch_ref: 'main', java: 21 }
    steps:
      - name: Set up JDK ${{ matrix.entry.java }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.entry.java }}
          distribution: 'temurin'

      - name: Checkout OpenSearch
        uses: actions/checkout@v3
        with:
          repository: opensearch-project/OpenSearch
          ref: ${{ matrix.entry.opensearch_ref }}
          path: opensearch

      - name: Get OpenSearch branch top
        id: get-key
        working-directory: opensearch
        run: echo key=`git log -1 --format='%H'` >> $GITHUB_OUTPUT

      - name: Restore cached build
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: opensearch/distribution/archives/linux-tar/build/distributions
          key: ${{ steps.get-key.outputs.key }}

      - name: Set up Gradle JDK runtime
        if: matrix.entry.gradle-runtime
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.entry.gradle-runtime }}
          distribution: temurin

      - name: Set JAVA${{ matrix.java }}_HOME
        shell: bash
        run: |
          echo "JAVA${{ matrix.java }}_HOME=$JAVA_HOME_${{ matrix.java }}_${{ runner.arch }}" >> $GITHUB_ENV

      - name: Assemble OpenSearch
        if: steps.cache-restore.outputs.cache-hit != 'true'
        working-directory: opensearch
        run: ./gradlew :distribution:archives:linux-tar:assemble -Druntime.java=${{ matrix.java }}

      - name: Save cached build
        if: steps.cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: opensearch/distribution/archives/linux-tar/build/distributions
          key: ${{ steps.get-key.outputs.key }}

      - name: Run OpenSearch
        working-directory: opensearch/distribution/archives/linux-tar/build/distributions
        run: |
          tar xf opensearch-min-*
          ./opensearch-*/bin/opensearch &
          for attempt in {1..20}; do sleep 5; if curl -s localhost:9200; then echo '=====> ready'; break; fi; echo '=====> waiting...'; done

      - name: Checkout Java Client
        uses: actions/checkout@v3
        with:
          path: opensearch-java

      - name: Run Integration Test
        run: |
          cd opensearch-java
          ./gradlew clean integrationTest -Dhttps=false

      - name: Upload Reports
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: opensearch-java/java-client/build/reports/
          retention-days: 7
