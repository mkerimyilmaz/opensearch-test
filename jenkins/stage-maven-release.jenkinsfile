lib = library(identifier: 'jenkins@main', retriever: modernSCM([
    $class: 'GitSCMSource',
    remote: 'https://github.com/opensearch-project/opensearch-build.git',
]))

pipeline {
    agent {
        docker {
            label 'Jenkins-Agent-AL2-X64-C54xlarge-Docker-Host'
            image 'opensearchstaging/ci-runner:ci-runner-centos7-opensearch-build-v2'
            args '-e JAVA_HOME=/opt/java/openjdk-11'
            alwaysPull true
        }
    }
    environment {
        VERSION = "${params.VERSION}"
        ARTIFACT_PATH = "$WORKSPACE/build/repository/org/opensearch/client/opensearch-java/${VERSION}"
    }
    stages {
        stage('parameters') {
            steps {
                script {
                    properties([
                        parameters([
                            string(
                                name: 'REF',
                                trim: true
                            ),
                            string(
                                name: 'VERSION',
                                trim: true
                            )
                        ])
                    ])
                    if (params.REF.isEmpty() || params.VERSION.isEmpty()) {
                        currentBuild.result = 'ABORTED'
                        error('Missing REF and/or VERSION.')
                    }
                }
            }
        }
        stage('Publish to Maven Local') {
            steps {
                // checkout the commit
                git url: 'https://github.com/opensearch-project/opensearch-java.git', branch: 'main'
                sh('git checkout ${REF}')

                // publish maven artifacts
                sh('./gradlew --no-daemon publishPublishMavenPublicationToLocalRepoRepository')
            }
        }
        stage('Sign') {
            steps {
                script {
                    signArtifacts(
                        artifactPath: "${ARTIFACT_PATH}",
                        type: 'maven',
                        platform: 'linux'
                    )
                }
            }
        }
        stage('Stage Maven Artifacts') {
            environment {
                REPO_URL = 'https://aws.oss.sonatype.org/'
                STAGING_PROFILE_ID = "${SONATYPE_STAGING_PROFILE_ID}"
                BUILD_ID = "${BUILD_NUMBER}"
            }
            steps {
                // checkout the build repo
                git url: 'https://github.com/opensearch-project/opensearch-build.git', branch: 'main'

                // stage artifacts for release with Sonatype
                withCredentials([usernamePassword(credentialsId: 'jenkins-sonatype-creds', usernameVariable: 'SONATYPE_USERNAME', passwordVariable: 'SONATYPE_PASSWORD')]) {
                    sh('$WORKSPACE/publish/stage-maven-release.sh $ARTIFACT_PATH')
                }
            }
        }
    }
    post {
        always {
            cleanWs disableDeferredWipeout: true, deleteDirs: true
        }
    }
}
