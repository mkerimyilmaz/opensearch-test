package org.opensearch.client.opensearch;

import org.opensearch.client.opensearch._types.*;
import org.opensearch.client.json.*;
import org.opensearch.client.transport.*;
import org.opensearch.client.transport.endpoints.*;
import org.opensearch.client.util.*;
import jakarta.json.stream.JsonGenerator;
import java.util.*;
import java.util.function.Function;
import javax.annotation.*;

@JsonpDeserializable
public class {{className}} implements JsonpSerializable {
    {{#fields}}
    {{^required}}@Nullable{{/required}}
    private final {{{type}}} {{name}};
    {{/fields}}

    public {{className}}(Builder builder) {
        {{#fields}}
        {{#type.isListOrMap}}
        this.{{name}} = ApiTypeHelper.unmodifiable(builder.{{name}});
        {{/type.isListOrMap}}
        {{^type.isListOrMap}}
        this.{{name}} = builder.{{name}};
        {{/type.isListOrMap}}
        {{/fields}}
    }

    public static {{className}} of(Function<Builder, ObjectBuilder<{{className}}>> fn) {
        return fn.apply(new Builder()).build();
    }

    {{#fields}}
    public final {{{type}}} {{name}}() {
        return this.{{name}};
    }

    {{/fields}}
    public void serialize(JsonGenerator generator, JsonpMapper mapper) {
        generator.writeStartObject();
        serializeInternal(generator, mapper);
        generator.writeEnd();
    }

    protected void serializeInternal(JsonGenerator generator, JsonpMapper mapper) {
        {{#fields}}
        if ({{#type.isDefined}}this.{{name}}{{/type.isDefined}}) {
            generator.writeKey({{#dq}}{{wireName}}{{/dq}});
            {{#type.serializer}}this.{{name}}{{/type.serializer}}
        }

        {{/fields}}
    }

    {{>ObjectBuilder}}

    public static final JsonpDeserializer<{{className}}> _DESERIALIZER = ObjectBuilderDeserializer
            .lazy(Builder::new, {{className}}::setup{{className}}Deserializer);

    protected static void setup{{className}}Deserializer(
            ObjectDeserializer<{{className}}.Builder> op) {
        {{#fields}}
        op.add(Builder::{{name}}, {{{type.deserializer}}}, {{#dq}}{{wireName}}{{/dq}});
        {{/fields}}
    }
}