package {{packageName}};

import org.opensearch.client.opensearch._types.*;
{{#hasRequestBody}}
import org.opensearch.client.json.*;
{{/hasRequestBody}}
import org.opensearch.client.transport.*;
import org.opensearch.client.transport.endpoints.*;
import org.opensearch.client.util.*;
{{#hasRequestBody}}
import jakarta.json.stream.JsonGenerator;
{{/hasRequestBody}}
import java.util.*;
import java.util.function.Function;
import java.util.stream.*;
import javax.annotation.*;

/**
 * {{description}}
 */
{{#hasRequestBody}}
@JsonpDeserializable
{{/hasRequestBody}}
public class {{className}} extends RequestBase{{#hasRequestBody}} implements JsonpSerializable{{/hasRequestBody}} {
    {{>ObjectShape/Fields}}
    {{>ObjectShape/Constructor}}
    {{>ObjectShape/Getters}}

    {{#hasRequestBody}}
    {{>ObjectShape/Serialize}}
    {{/hasRequestBody}}

    {{>ObjectShape/Builder}}

    {{#hasRequestBody}}
    {{>ObjectShape/Deserialize}}
    {{/hasRequestBody}}

    public static final Endpoint<{{className}}, {{responseType}}, ErrorResponse> _ENDPOINT = new SimpleEndpoint<>(
            // Request method
            request -> {
                return {{#dq}}{{httpMethod}}{{/dq}};
            },
            // Request path
            request -> {
                return {{{httpPath}}};
            },
            // Request parameters
            request -> {
                Map<String, String> params = new HashMap<>();
                {{#queryParams}}
                if ({{#type.isDefined}}request.{{name}}{{/type.isDefined}}) {
                    params.put({{#dq}}{{wireName}}{{/dq}}, {{#type.queryParamify}}request.{{name}}{{/type.queryParamify}});
                }
                {{/queryParams}}
                return params;
            },
            SimpleEndpoint.emptyMap(),
            {{hasRequestBody}},
            {{responseType}}._DESERIALIZER
    );
}