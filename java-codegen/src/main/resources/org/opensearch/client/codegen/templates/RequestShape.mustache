{{>Partials/LicenseHeader}}

package {{packageName}};

{{#hasRequestBody}}
import jakarta.json.stream.JsonGenerator;
{{/hasRequestBody}}
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;
import javax.annotation.Nullable;
{{#hasRequestBody}}
import org.opensearch.client.json.JsonpDeserializable;
import org.opensearch.client.json.JsonpDeserializer;
import org.opensearch.client.json.JsonpMapper;
import org.opensearch.client.json.JsonpSerializable;
import org.opensearch.client.json.ObjectBuilderDeserializer;
import org.opensearch.client.json.ObjectDeserializer;
{{/hasRequestBody}}
import org.opensearch.client.opensearch.*;
import org.opensearch.client.opensearch._types.*;
import org.opensearch.client.transport.Endpoint;
import org.opensearch.client.transport.endpoints.SimpleEndpoint;
import org.opensearch.client.util.ApiTypeHelper;
import org.opensearch.client.util.ObjectBuilder;
import org.opensearch.client.util.ObjectBuilderBase;

/**
 * {{description}}
 */
{{#hasRequestBody}}
@JsonpDeserializable
{{/hasRequestBody}}
public class {{className}} extends RequestBase{{#hasRequestBody}} implements JsonpSerializable{{/hasRequestBody}} {
    {{>ObjectShape/Fields}}

    // ---------------------------------------------------------------------------------------------

    {{>ObjectShape/Constructor}}
    {{>ObjectShape/Getters}}

    {{#hasRequestBody}}
    {{>ObjectShape/Serialize}}
    {{/hasRequestBody}}

    // ---------------------------------------------------------------------------------------------

    {{>ObjectShape/Builder}}

    {{#hasRequestBody}}
    {{>ObjectShape/Deserialize}}
    {{/hasRequestBody}}

    // ---------------------------------------------------------------------------------------------

    /**
     * Endpoint "{@code {{operationGroup}}}".
     */
    public static final Endpoint<{{className}}, {{responseType}}, ErrorResponse> _ENDPOINT = new SimpleEndpoint<>(
            // Request method
            request -> {{#quoted}}{{httpMethod}}{{/quoted}},
            // Request path
            request -> {
                {{#hasSinglePath}}
                    {{#firstPath}}{{>RequestShape/HttpPathBuilder}}{{/firstPath}}
                {{/hasSinglePath}}
                {{^hasSinglePath}}
                    {{#indexedPathParams}}
                    final int _{{left}} = 1 << {{right}};
                    {{/indexedPathParams}}

                    int propsSet = 0;

                    {{#pathParams}}
                    if (ApiTypeHelper.isDefined(request.{{name}}())) propsSet |= _{{name}};
                    {{/pathParams}}

                    {{#httpPaths}}
                    if (propsSet == {{#hasParams}}({{#params}}{{^-first}} | {{/-first}}_{{name}}{{/params}}){{/hasParams}}{{^hasParams}}0{{/hasParams}}) {
                        {{>RequestShape/HttpPathBuilder}}
                    }
                    {{/httpPaths}}

                    throw SimpleEndpoint.noPathTemplateFound("path");
                {{/hasSinglePath}}
            },
            // Request parameters
            {{#hasQueryParams}}
            request -> {
                Map<String, String> params = new HashMap<>();
                {{#queryParams}}
                {{#type.isListOrMap}}
                if (ApiTypeHelper.isDefined(request.{{name}})) {
                {{/type.isListOrMap}}
                {{^type.isListOrMap}}
                if (request.{{name}} != null) {
                {{/type.isListOrMap}}
                    params.put({{#quoted}}{{wireName}}{{/quoted}}, {{#type.queryParamify}}request.{{name}}{{/type.queryParamify}});
                }
                {{/queryParams}}
                return params;
            },
            {{/hasQueryParams}}
            {{^hasQueryParams}}
            SimpleEndpoint.emptyMap(),
            {{/hasQueryParams}}
            SimpleEndpoint.emptyMap(),
            {{hasRequestBody}},
            {{responseType}}._DESERIALIZER
    );
}