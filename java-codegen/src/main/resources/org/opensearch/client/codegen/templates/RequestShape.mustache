{{>Partials/LicenseHeader}}

package {{packageName}};

{{#hasRequestBody}}
import org.opensearch.client.json.JsonpDeserializable;
import org.opensearch.client.json.JsonpDeserializer;
import org.opensearch.client.json.JsonpMapper;
import org.opensearch.client.json.JsonpSerializable;
import org.opensearch.client.json.ObjectBuilderDeserializer;
import org.opensearch.client.json.ObjectDeserializer;
{{/hasRequestBody}}
import org.opensearch.client.opensearch._types.ErrorResponse;
import org.opensearch.client.opensearch._types.RequestBase;
import org.opensearch.client.transport.Endpoint;
import org.opensearch.client.transport.endpoints.SimpleEndpoint;
import org.opensearch.client.util.ApiTypeHelper;
import org.opensearch.client.util.ObjectBuilder;
import org.opensearch.client.util.ObjectBuilderBase;
{{#hasRequestBody}}
import jakarta.json.stream.JsonGenerator;
{{/hasRequestBody}}
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;
import javax.annotation.Nullable;

/**
 * {{description}}
 */
{{#hasRequestBody}}
@JsonpDeserializable
{{/hasRequestBody}}
public class {{className}} extends RequestBase{{#hasRequestBody}} implements JsonpSerializable{{/hasRequestBody}} {
    {{>ObjectShape/Fields}}
    {{>ObjectShape/Constructor}}
    {{>ObjectShape/Getters}}

    {{#hasRequestBody}}
    {{>ObjectShape/Serialize}}
    {{/hasRequestBody}}

    {{>ObjectShape/Builder}}

    {{#hasRequestBody}}
    {{>ObjectShape/Deserialize}}
    {{/hasRequestBody}}

    public static final Endpoint<{{className}}, {{responseType}}, ErrorResponse> _ENDPOINT = new SimpleEndpoint<>(
            // Request method
            request -> {
                return {{#quoted}}{{httpMethod}}{{/quoted}};
            },
            // Request path
            request -> {
                StringBuilder buf = new StringBuilder();
                {{#httpPathParts}}
                {{#isParameter}}
                SimpleEndpoint.pathEncode({{#parameter.type.queryParamify}}request.{{parameter.name}}{{/parameter.type.queryParamify}}, buf);
                {{/isParameter}}
                {{^isParameter}}
                buf.append({{#quoted}}{{content}}{{/quoted}});
                {{/isParameter}}
                {{/httpPathParts}}
                return buf.toString();
            },
            // Request parameters
            request -> {
                Map<String, String> params = new HashMap<>();
                {{#queryParams}}
                {{#type.isListOrMap}}
                if (ApiTypeHelper.isDefined(request.{{name}})) {
                {{/type.isListOrMap}}
                {{^type.isListOrMap}}
                if (request.{{name}} != null) {
                {{/type.isListOrMap}}
                    params.put({{#quoted}}{{wireName}}{{/quoted}}, {{#type.queryParamify}}request.{{name}}{{/type.queryParamify}});
                }
                {{/queryParams}}
                return params;
            },
            SimpleEndpoint.emptyMap(),
            {{hasRequestBody}},
            {{responseType}}._DESERIALIZER
    );
}